<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="namespacequantities" kind="namespace" language="C++">
    <compoundname>quantities</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacequantities_1a9f540d78b507e07cffcefb9952a6b8d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto quantities::pt</definition>
        <argsstring>(auto df, std::vector&lt; std::string &gt; varSet, const std::string &amp;outputname, const std::string &amp;inputvector)</argsstring>
        <name>pt</name>
        <param>
          <type>auto</type>
          <declname>df</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>varSet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>outputname</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputvector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the pt from a given lorentz vector and add it to the dataframe</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>the dataframe to add the quantity to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>varSet</parametername>
</parameternamelist>
<parameterdescription>
<para>- vector of variables with are snapsotted in the end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the new column containing the pt value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputvector</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column containing the lorentz vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a dataframe with the new column </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/quantities.hxx" line="17" column="6" bodyfile="/work/sbrommer/ntuple_prototype/quantities.hxx" bodystart="17" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacequantities_1a88c8f32db1b0b21d2d9d6a0372c6ad20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto quantities::eta</definition>
        <argsstring>(auto df, std::vector&lt; std::string &gt; varSet, const std::string &amp;outputname, const std::string &amp;inputvector)</argsstring>
        <name>eta</name>
        <param>
          <type>auto</type>
          <declname>df</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>varSet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>outputname</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputvector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the eta from a given lorentz vector and add it to the dataframe</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>the dataframe to add the quantity to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>varSet</parametername>
</parameternamelist>
<parameterdescription>
<para>- vector of variables with are snapsotted in the end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the new column containing the eta value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputvector</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column containing the lorentz vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a dataframe with the new column </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/quantities.hxx" line="35" column="6" bodyfile="/work/sbrommer/ntuple_prototype/quantities.hxx" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespacequantities_1a1bbe36bb71e290fc362fd6ee2ba90414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto quantities::phi</definition>
        <argsstring>(auto df, std::vector&lt; std::string &gt; varSet, const std::string &amp;outputname, const std::string &amp;inputvector)</argsstring>
        <name>phi</name>
        <param>
          <type>auto</type>
          <declname>df</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>varSet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>outputname</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputvector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the eta from a given lorentz vector and add it to the dataframe</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>the dataframe to add the quantity to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>varSet</parametername>
</parameternamelist>
<parameterdescription>
<para>- vector of variables with are snapsotted in the end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the new column containing the eta value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputvector</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column containing the lorentz vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a dataframe with the new column </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/quantities.hxx" line="53" column="6" bodyfile="/work/sbrommer/ntuple_prototype/quantities.hxx" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacequantities_1af7cd7e5effc0d3a2652dcbf13f32d7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto quantities::m_vis</definition>
        <argsstring>(auto df, std::vector&lt; std::string &gt; varSet, const std::string &amp;outputname, const std::string &amp;inputvector1, const std::string &amp;inputvector2)</argsstring>
        <name>m_vis</name>
        <param>
          <type>auto</type>
          <declname>df</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>varSet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>outputname</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputvector1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputvector2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function to calculate the mass from a pair of lorentz vectors and add it to the dataframe</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>the dataframe to add the quantity to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>varSet</parametername>
</parameternamelist>
<parameterdescription>
<para>- vector of variables with are snapsotted in the end </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the new column containing the pt value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputvector1</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column containing the first lorentz vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputvector2</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the column containing the second lorentz vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a dataframe with the new column </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/quantities.hxx" line="72" column="6" bodyfile="/work/sbrommer/ntuple_prototype/quantities.hxx" bodystart="72" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The namespace that is used to hold the functions for basic quantities that are needed for every event </para>
    </detaileddescription>
    <location file="/work/sbrommer/ntuple_prototype/quantities.hxx" line="5" column="1"/>
  </compounddef>
</doxygen>
