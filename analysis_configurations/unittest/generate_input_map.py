import ROOT
import glob
import os
import json


def load_crown_mapping(filename):
    data = {}
    ROOT.gInterpreter.GenerateDictionary("map<string,vector<string> >", "map")
    f = ROOT.TFile.Open(filename)
    name = "shift_quantities_map"
    m = f.Get(name)
    for shift, quantities in m:
        data[str(shift)] = [str(quantity) for quantity in quantities]
    f.Close()
    print("Cleaning up autogenerated files")
    # cleanup autogenerated files
    # for f in glob.glob("AutoDict_*"):
    #     os.remove(f)
    return data


# dump the data to a json file
data = {}
data["2018"] = {}
data["2018"]["dyjets"] = {}
for scope in ["et", "mt", "mm"]:
    data["2018"]["dyjets"][scope] = load_crown_mapping(
        "/work/sbrommer/ntuple_prototype/CROWNTestingSamples/CrownNtuple.root"
    )
with open("dyjets_shift_quantities_map.json", "w") as f:
    json.dump(data, f, indent=4)
