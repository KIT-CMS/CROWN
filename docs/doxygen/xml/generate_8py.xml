<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="generate_8py" kind="file" language="Python">
    <compoundname>generate.py</compoundname>
    <innernamespace refid="namespacegenerate">generate</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>Dummy<sp/>Python<sp/>generation<sp/>script,<sp/>just<sp/>to<sp/>showcase<sp/>the<sp/>cmake<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>script<sp/>just<sp/>copies<sp/>the<sp/>template<sp/>around<sp/>and<sp/>does<sp/>not<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>argparse</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>shutil<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copyfile</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>os<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>path</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>importlib</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>code_generation.code_generation<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>fill_template</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">parser<sp/>=<sp/>argparse.ArgumentParser(description=</highlight><highlight class="stringliteral">&quot;Generate<sp/>the<sp/>C++<sp/>code<sp/>for<sp/>a<sp/>given<sp/>config&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">parser.add_argument(</highlight><highlight class="stringliteral">&quot;--template&quot;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&quot;Path<sp/>to<sp/>the<sp/>template&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">parser.add_argument(</highlight><highlight class="stringliteral">&quot;--output&quot;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&quot;Path<sp/>to<sp/>the<sp/>output<sp/>directory&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">parser.add_argument(</highlight><highlight class="stringliteral">&quot;--analysis&quot;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>the<sp/>analysis<sp/>config&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">parser.add_argument(</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--channels&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>type=str,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>nargs=</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&apos;Channels<sp/>to<sp/>be<sp/>activated.<sp/>To<sp/>select<sp/>all,<sp/>choose<sp/>&quot;auto&quot;&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="20"><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">parser.add_argument(</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--shifts&quot;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&apos;Shifts<sp/>to<sp/>be<sp/>activated.<sp/>To<sp/>select<sp/>all,<sp/>choose<sp/>&quot;auto&quot;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">parser.add_argument(</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--samples&quot;</highlight><highlight class="normal">,<sp/>type=str,<sp/>help=</highlight><highlight class="stringliteral">&apos;Samples<sp/>to<sp/>be<sp/>processed.<sp/>To<sp/>select<sp/>all,<sp/>choose<sp/>&quot;auto&quot;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">args<sp/>=<sp/>parser.parse_args()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Executables<sp/>for<sp/>each<sp/>era<sp/>and<sp/>per<sp/>following<sp/>processes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>ggH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#<sp/>vbf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">#<sp/>remaining<sp/>htt<sp/>and<sp/>hww?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#<sp/>embedded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#<sp/>tt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#<sp/>vv<sp/>and<sp/>single<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/>DY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WJets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">executables<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="40"><highlight class="normal">sample_groups<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;emb&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sample_group<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sample_groups:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>executable<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;analysis_{sample_group}.cxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>analysis<sp/>=<sp/>importlib.import_module(</highlight><highlight class="stringliteral">&quot;config.&quot;</highlight><highlight class="normal"><sp/>+<sp/>args.analysis)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>config<sp/>=<sp/>analysis.build_config()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>modify<sp/>config<sp/>according<sp/>to<sp/>args</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(args.template,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>template_file:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>=<sp/>template_file.read()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>=<sp/>fill_template(template,<sp/>config)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(executable,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>executable_file:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>executable_file.write(template)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>executables.append(executable)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path.join(args.output,<sp/></highlight><highlight class="stringliteral">&quot;files.txt&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>filename<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>executables:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>copyfile(args.template,<sp/>path.join(args.output,<sp/>filename))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(filename<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="/work/sbrommer/ntuple_prototype/generate.py"/>
  </compounddef>
</doxygen>
