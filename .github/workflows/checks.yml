name: Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Settings go here!
env:
  BUILD_TYPE: Release
  ANALYSIS: test.unittest_config
  SAMPLES: dy
  ERAS: 2018
  CHANNELS: "mt,mm,et"
  SHIFTS: "tauES,metUnclusteredEnUp"

jobs:
  build_project:
    runs-on: ubuntu-20.04
    container:
      image: rootproject/root:6.24.06-arch
      options: --user 0 # run as root

    steps:
      - name: update Arch keyring
        run: pacman -Sy archlinux-keyring --noconfirm

      - name: Install missing software
        run: pacman -Syu --noconfirm cmake make git python-pip --ignore=root

      - uses: actions/checkout@v2

      - name: Create Build Environment
        shell: bash
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        run: cd ${{github.workspace}}/build && cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DANALYSIS=$ANALYSIS -DSAMPLES=$SAMPLES -DERAS=$ERAS -DCHANNELS=$CHANNELS -DSHIFTS=$SHIFTS

      - name: Build
        shell: bash
        run: cd ${{github.workspace}}/build && make install

      - name: Test
        shell: bash
        run: cd ${{github.workspace}}/build && ctest -V

  python_format:
    runs-on: ubuntu-20.04
    container:
      image: rootproject/root:6.24.06-arch
      options: --user 0 # run as root

    steps:
      - name: update Arch keyring
        run: pacman -Sy archlinux-keyring --noconfirm

      - name: Install missing software
        run: pacman -Syu --noconfirm git python-pip && pip install black

      - uses: actions/checkout@v2

      - name: Check Python formatting
        shell: bash
        run: cd $GITHUB_WORKSPACE && bash checks/python-formatting.sh

  cpp_format:
    runs-on: ubuntu-20.04
    container:
      image: rootproject/root:6.24.06-arch
      options: --user 0 # run as root

    steps:
      - name: update Arch keyring
        run: pacman -Sy archlinux-keyring --noconfirm

      - name: Install missing software
        run: pacman -Syu --noconfirm git python-pip && pip install clang-format

      - uses: actions/checkout@v2

      - name: Check C++ formatting
        shell: bash
        run: cd $GITHUB_WORKSPACE && bash checks/cpp-formatting.sh

  docs:
    runs-on: ubuntu-20.04
    container:
      image: rootproject/root:6.24.06-arch
      options: --user 0 # run as root

    steps:
      - name: update Arch keyring
        run: pacman -Sy archlinux-keyring --noconfirm

      - name: Install missing software
        run: pacman -Syu --noconfirm git cmake make doxygen python-pip

      - name: install docs related packages
        run: pip install breathe==4.31 sphinx_rtd_theme==0.5

      - uses: actions/checkout@v2

      - name: Create Build Environment
        shell: bash
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        run: cd ${{github.workspace}}/build && cmake $GITHUB_WORKSPACE/docs

      - name: Build docs
        shell: bash
        run: cd ${{github.workspace}}/build && make

      - name: Publish
        shell: bash
        run: echo "TODO"
