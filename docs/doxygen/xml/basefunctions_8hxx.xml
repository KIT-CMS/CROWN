<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="basefunctions_8hxx" kind="file" language="C++">
    <compoundname>basefunctions.hxx</compoundname>
    <includes local="yes">ROOT/RDataFrame.hxx</includes>
    <includes local="yes">ROOT/RVec.hxx</includes>
    <includedby refid="physicsobjects_8hxx" local="yes">/work/sbrommer/ntuple_prototype/physicsobjects.hxx</includedby>
    <incdepgraph>
      <node id="2">
        <label>ROOT/RDataFrame.hxx</label>
      </node>
      <node id="3">
        <label>ROOT/RVec.hxx</label>
      </node>
      <node id="1">
        <label>/work/sbrommer/ntuple_prototype/basefunctions.hxx</label>
        <link refid="basefunctions_8hxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/work/sbrommer/ntuple_prototype/physicsobjects.hxx</label>
        <link refid="physicsobjects_8hxx_source"/>
      </node>
      <node id="1">
        <label>/work/sbrommer/ntuple_prototype/basefunctions.hxx</label>
        <link refid="basefunctions_8hxx"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacebasefunctions">basefunctions</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="basefunctions_8hxx_1a1ce9b523fd4f3b5bbcadcd796183455a" prot="public" static="no" strong="no">
        <type></type>
        <name>Channel</name>
        <enumvalue id="basefunctions_8hxx_1a1ce9b523fd4f3b5bbcadcd796183455aa083c5deda2b4189cc867a10c1092eeb1" prot="public">
          <name>MT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="basefunctions_8hxx_1a1ce9b523fd4f3b5bbcadcd796183455aa40ded2f37a721ff9351bf9aca9ec5974" prot="public">
          <name>ET</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="basefunctions_8hxx_1a1ce9b523fd4f3b5bbcadcd796183455aae4c45857ce1df52bec22a27a9a71e644" prot="public">
          <name>TT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="basefunctions_8hxx_1a1ce9b523fd4f3b5bbcadcd796183455aab16875edf2497f583e9be64ea2c0ab95" prot="public">
          <name>EM</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/basefunctions.hxx" line="4" column="1" bodyfile="/work/sbrommer/ntuple_prototype/basefunctions.hxx" bodystart="4" bodyend="4"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ROOT/RDataFrame.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ROOT/RVec.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Channel<sp/>{<sp/>MT<sp/>=<sp/>0,<sp/>ET<sp/>=<sp/>1,<sp/>TT<sp/>=<sp/>2,<sp/>EM<sp/>=<sp/>3<sp/>};</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">basefunctions<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>FilterMax(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cut)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[cut](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ROOT::RVec&lt;float&gt;<sp/>&amp;values)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROOT::RVec&lt;int&gt;<sp/>mask<sp/>=<sp/>values<sp/>&lt;<sp/>cut;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>FilterMin(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cut)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>in<sp/>ROOT,<sp/>for<sp/>min<sp/>we<sp/>use<sp/>&gt;=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[cut](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ROOT::RVec&lt;float&gt;<sp/>&amp;values)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROOT::RVec&lt;int&gt;<sp/>mask<sp/>=<sp/>values<sp/>&gt;=<sp/>cut;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>FilterAbsMax(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cut)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[cut](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ROOT::RVec&lt;float&gt;<sp/>&amp;values)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROOT::RVec&lt;int&gt;<sp/>mask<sp/>=<sp/>abs(values)<sp/>&lt;<sp/>cut;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>FilterAbsMin(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cut)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[cut](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ROOT::RVec&lt;float&gt;<sp/>&amp;values)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROOT::RVec&lt;int&gt;<sp/>mask<sp/>=<sp/>abs(values)<sp/>&gt;=<sp/>cut;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>MultiplyTwoMasks()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ROOT::RVec&lt;Int_t&gt;<sp/>&amp;mask_1,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ROOT::RVec&lt;Int_t&gt;<sp/>&amp;mask_2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask_1<sp/>*<sp/>mask_2;<sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>FilterID(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[index](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ROOT::RVec&lt;UChar_t&gt;<sp/>&amp;IDs)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROOT::RVec&lt;int&gt;<sp/>mask;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ID<sp/>:<sp/>IDs)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask.push_back(std::min(1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(ID<sp/>&amp;<sp/>1<sp/>&lt;&lt;<sp/>index<sp/>-<sp/>1)));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>basefunctions</highlight></codeline>
    </programlisting>
    <location file="/work/sbrommer/ntuple_prototype/basefunctions.hxx"/>
  </compounddef>
</doxygen>
