<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="analysis__playground_8cxx" kind="file" language="C++">
    <compoundname>analysis_playground.cxx</compoundname>
    <includes local="yes">ROOT/RDFHelpers.hxx</includes>
    <includes local="yes">ROOT/RDataFrame.hxx</includes>
    <includes local="yes">particles.hxx</includes>
    <incdepgraph>
      <node id="3">
        <label>ROOT/RDataFrame.hxx</label>
      </node>
      <node id="2">
        <label>ROOT/RDFHelpers.hxx</label>
      </node>
      <node id="4">
        <label>particles.hxx</label>
      </node>
      <node id="1">
        <label>/work/sbrommer/ntuple_prototype/analysis_playground.cxx</label>
        <link refid="analysis__playground_8cxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceAction">Action</innernamespace>
    <innernamespace refid="namespaceConfig">Config</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="analysis__playground_8cxx_1a16066986a0c65fcc754c90c550a7b4b4" prot="public" static="yes" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; varSet</definition>
        <argsstring></argsstring>
        <name>varSet</name>
        <initializer>= {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" line="6" column="20" bodyfile="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="analysis__playground_8cxx_1ac7734042c6471d3f50091ecb689e72c8" prot="public" static="no" mutable="no">
        <type>const std::string &amp;</type>
        <definition>switch tag</definition>
        <argsstring></argsstring>
        <name>tag</name>
        <initializer>{
    float ptcut</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" line="10" column="26" bodyfile="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="analysis__playground_8cxx_1a91cf6fbebedd86150a36e5ac3d5d3bfc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>break</definition>
        <argsstring></argsstring>
        <name>break</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" line="16" column="5" bodyfile="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="analysis__playground_8cxx_1a6e2c61c069d74dda28074b826b763af7" prot="public" static="no" mutable="no">
        <type>case</type>
        <definition>case mssmspecial</definition>
        <argsstring></argsstring>
        <name>mssmspecial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" line="17" column="6" bodyfile="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="analysis__playground_8cxx_1ae879ed783eb0f33d27beb490059110d2" prot="public" static="no" mutable="no">
        <type>default</type>
        <definition>default __pad0__</definition>
        <argsstring></argsstring>
        <name>__pad0__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" line="20" column="1" bodyfile="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="analysis__playground_8cxx_1a07caa7ac2910bb1cb39d26efc8af9f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CutPt</definition>
        <argsstring>(float x) auto transformation(auto df</argsstring>
        <name>CutPt</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="analysis__playground_8cxx_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" line="43" column="5" bodyfile="/work/sbrommer/ntuple_prototype/analysis_playground.cxx" bodystart="43" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ROOT/RDFHelpers.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ROOT/RDataFrame.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;particles.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>varSet<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">CutPt(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transformation(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tag)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ptcut;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>tag:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;smhtt&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptcut<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;mssmspecial&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>ptcut<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Tag<sp/>not<sp/>known&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>df.Filter([&amp;ptcut](</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eta)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacequantities_1a88c8f32db1b0b21d2d9d6a0372c6ad20" kindref="member">eta</ref><sp/>&gt;<sp/>ptcut;<sp/>},<sp/>{</highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Action<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transformation(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>foo,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;vars)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df.Filter([&amp;foo](</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>&gt;<sp/>foo;<sp/>},<sp/>vars);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Config<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transformation(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df,<sp/>TagSMHTT2016<sp/>foo)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Action::transformation(df,<sp/>-1,<sp/>{</highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transformation(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df,<sp/>TagMSSM<sp/>foo)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Action::transformation(df,<sp/>-1,<sp/>{</highlight><highlight class="stringliteral">&quot;eta&quot;</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ROOT::RDataFrame<sp/>df(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Events&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/ceph/htautau/nanoaod/testing/DYJetsToLL_SUmmer19_UL18.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>testing,<sp/>we<sp/>limit<sp/>to<sp/>1000<sp/>events<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1st<sp/>stage:<sp/>Good<sp/>object<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df2<sp/>=<sp/>df.Range(1000);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Electron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ROOT::RVec&lt;ROOT::Math::LorentzVector&gt;<sp/>BuildFourVector(....)<sp/>auto<sp/>df1<sp/>=</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.Define(&quot;Taus&quot;,<sp/>BuildFourVector,<sp/>{</highlight><highlight class="stringliteral">&quot;Muon_pt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Muon_eta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Muon_phi&quot;</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>RVec&lt;int&gt;<sp/>mask2<sp/>=<sp/>{1,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>RVec&lt;float&gt;<sp/>Muon_pt<sp/>=<sp/>{30,<sp/>40,<sp/>50};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>RVec&lt;int&gt;<sp/>maks2<sp/>=<sp/>Muon_pt<sp/>&gt;<sp/>30;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;{<sp/>0,<sp/>1,<sp/>1<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mask3<sp/>=<sp/>mask1<sp/>*<sp/>mask2;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>filtered_objects<sp/>=<sp/>Where(pts<sp/>&gt;<sp/>ptCut,<sp/>idx,<sp/>-999);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filtered_objects[filtered_objects<sp/>!=<sp/>-999];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Taus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df3<sp/>=<sp/>df2.Define(</highlight><highlight class="stringliteral">&quot;nTaus_initial&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nTau&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>varSet.push_back(</highlight><highlight class="stringliteral">&quot;nTaus_initial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df4<sp/>=<sp/>physicsobject::tau::SelectTaus(df3);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df5<sp/>=<sp/>Action::transformation(df4,<sp/>42);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>df5<sp/>=</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsobject::tau::CutPt(df4,<sp/>varSet,<sp/></highlight><highlight class="stringliteral">&quot;tau&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tau_cutfoo&quot;</highlight><highlight class="normal">)<sp/>auto<sp/>df6<sp/>=</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsobject::tau::CutEta(df5,<sp/>varSet,<sp/>&quot;tau_cutfoo&quot;,<sp/>&quot;tau_blub&quot;);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/>df7<sp/>=<sp/>df6.Define(&quot;nTaus_filtered&quot;,<sp/>&quot;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(good_taus.size())&quot;);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>varSet.push_back(&quot;nTaus_filtered&quot;);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Jets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/>df_final<sp/>=<sp/>df7;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>df_final.Snapshot(&quot;ntuple&quot;,<sp/>&quot;test.root&quot;,<sp/>varSet);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>first<sp/>testcase,<sp/>we<sp/>work<sp/>on<sp/>selecting<sp/>good<sp/>muons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/work/sbrommer/ntuple_prototype/analysis_playground.cxx"/>
  </compounddef>
</doxygen>
